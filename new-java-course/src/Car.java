//class is keyword for car extension .java is automatically added by IDEs
//bytecode .class is generated by JDK etc..

/*
public keyword is access modifier -- unrestricted access to class
other classes can access other classes
class is blueprint for objects --> state and behavior will be defined in the class
local variables --> inside the method (only accessed inside the method)
classes can allow fields or member variables that can be accessed in other methods
and even other classes
fields will have access modifiers --> usually private access modifiers inside a class
encapsulation-> hides fields and methods outside the class

 */
public class Car {

    /*
        fields --> Defines state of object
     */

    /*
        Car car = new Car();
        car.doors --> not accessible as the access modifier is private
        never make fields public --> always cars.getDoors() etc...
        known as encapsulation
     */

    private int doors;
    private String color;
    private int wheels;
    private String model;
    private String engine;

    /*
        Methods --> Getter/Setters or other methods define the behavior of
        objects
     */
    public int getDoors() {
        return doors;
    }

    //field --> doors
    //method --> parameter doors
    //this.doors --> fields --> doors --> parameter
    public void setDoors(int doors) {
        this.doors = doors;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    public int getWheels() {
        return wheels;
    }

    public void setWheels(int wheels) {
        this.wheels = wheels;
    }

    public String getModel() {
        //System.out.println(model);
        return model;
    }

    public void setModel(String model) {
        String validModel = model.toLowerCase();
        if (validModel.equals("carrera") || validModel.equals("commodore")) {
            this.model = model;
        } else {
            this.model = "Unknown, Please set model as carrera or commodore only";
        }
    }

    public String getEngine() {
        return engine;
    }

    public void setEngine(String engine) {
        this.engine = engine;
    }
}
